<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdc.yxt.mapping.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.hdc.yxt.entity.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="teachername" jdbcType="VARCHAR" property="teachername" />
    <result column="expertise" jdbcType="VARCHAR" property="expertise" />
    <result column="expIndustry" jdbcType="VARCHAR" property="expindustry" />
    <result column="addressall" jdbcType="VARCHAR" property="addressall" />
    <result column="agreenum" jdbcType="INTEGER" property="agreenum" />
    <result column="comscore" jdbcType="INTEGER" property="comscore" />
    <result column="teacherleaval" jdbcType="INTEGER" property="teacherleaval" />
    <result column="teacherImpl" jdbcType="VARCHAR" property="teacherimpl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, teachername, expertise, expIndustry, addressall, agreenum, comscore, teacherleaval, 
    teacherImpl
  </sql>
  <select id="selectByExample" parameterType="com.hdc.yxt.entity.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdc.yxt.entity.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdc.yxt.entity.Teacher">
    insert into teacher (id, teachername, expertise, 
      expIndustry, addressall, agreenum, 
      comscore, teacherleaval, teacherImpl
      )
    values (#{id,jdbcType=INTEGER}, #{teachername,jdbcType=VARCHAR}, #{expertise,jdbcType=VARCHAR}, 
      #{expindustry,jdbcType=VARCHAR}, #{addressall,jdbcType=VARCHAR}, #{agreenum,jdbcType=INTEGER}, 
      #{comscore,jdbcType=INTEGER}, #{teacherleaval,jdbcType=INTEGER}, #{teacherimpl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hdc.yxt.entity.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teachername != null">
        teachername,
      </if>
      <if test="expertise != null">
        expertise,
      </if>
      <if test="expindustry != null">
        expIndustry,
      </if>
      <if test="addressall != null">
        addressall,
      </if>
      <if test="agreenum != null">
        agreenum,
      </if>
      <if test="comscore != null">
        comscore,
      </if>
      <if test="teacherleaval != null">
        teacherleaval,
      </if>
      <if test="teacherimpl != null">
        teacherImpl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="expertise != null">
        #{expertise,jdbcType=VARCHAR},
      </if>
      <if test="expindustry != null">
        #{expindustry,jdbcType=VARCHAR},
      </if>
      <if test="addressall != null">
        #{addressall,jdbcType=VARCHAR},
      </if>
      <if test="agreenum != null">
        #{agreenum,jdbcType=INTEGER},
      </if>
      <if test="comscore != null">
        #{comscore,jdbcType=INTEGER},
      </if>
      <if test="teacherleaval != null">
        #{teacherleaval,jdbcType=INTEGER},
      </if>
      <if test="teacherimpl != null">
        #{teacherimpl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdc.yxt.entity.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teachername != null">
        teachername = #{record.teachername,jdbcType=VARCHAR},
      </if>
      <if test="record.expertise != null">
        expertise = #{record.expertise,jdbcType=VARCHAR},
      </if>
      <if test="record.expindustry != null">
        expIndustry = #{record.expindustry,jdbcType=VARCHAR},
      </if>
      <if test="record.addressall != null">
        addressall = #{record.addressall,jdbcType=VARCHAR},
      </if>
      <if test="record.agreenum != null">
        agreenum = #{record.agreenum,jdbcType=INTEGER},
      </if>
      <if test="record.comscore != null">
        comscore = #{record.comscore,jdbcType=INTEGER},
      </if>
      <if test="record.teacherleaval != null">
        teacherleaval = #{record.teacherleaval,jdbcType=INTEGER},
      </if>
      <if test="record.teacherimpl != null">
        teacherImpl = #{record.teacherimpl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      teachername = #{record.teachername,jdbcType=VARCHAR},
      expertise = #{record.expertise,jdbcType=VARCHAR},
      expIndustry = #{record.expindustry,jdbcType=VARCHAR},
      addressall = #{record.addressall,jdbcType=VARCHAR},
      agreenum = #{record.agreenum,jdbcType=INTEGER},
      comscore = #{record.comscore,jdbcType=INTEGER},
      teacherleaval = #{record.teacherleaval,jdbcType=INTEGER},
      teacherImpl = #{record.teacherimpl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdc.yxt.entity.Teacher">
    update teacher
    <set>
      <if test="teachername != null">
        teachername = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="expertise != null">
        expertise = #{expertise,jdbcType=VARCHAR},
      </if>
      <if test="expindustry != null">
        expIndustry = #{expindustry,jdbcType=VARCHAR},
      </if>
      <if test="addressall != null">
        addressall = #{addressall,jdbcType=VARCHAR},
      </if>
      <if test="agreenum != null">
        agreenum = #{agreenum,jdbcType=INTEGER},
      </if>
      <if test="comscore != null">
        comscore = #{comscore,jdbcType=INTEGER},
      </if>
      <if test="teacherleaval != null">
        teacherleaval = #{teacherleaval,jdbcType=INTEGER},
      </if>
      <if test="teacherimpl != null">
        teacherImpl = #{teacherimpl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdc.yxt.entity.Teacher">
    update teacher
    set teachername = #{teachername,jdbcType=VARCHAR},
      expertise = #{expertise,jdbcType=VARCHAR},
      expIndustry = #{expindustry,jdbcType=VARCHAR},
      addressall = #{addressall,jdbcType=VARCHAR},
      agreenum = #{agreenum,jdbcType=INTEGER},
      comscore = #{comscore,jdbcType=INTEGER},
      teacherleaval = #{teacherleaval,jdbcType=INTEGER},
      teacherImpl = #{teacherimpl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>